# import pytube
import requests
from aiogram import Bot, Dispatcher, executor, types
from config_data.config import load_config
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton

config = load_config('config_data/.env')

BOT_TOKEN: str = config.tg_bot.token   # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é bot_token
# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot: Bot = Bot(token=BOT_TOKEN)
dp: Dispatcher = Dispatcher(bot)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
button_1: KeyboardButton = KeyboardButton('–°–æ–±–∞—á–µ–∫ ü¶Æ')
button_2: KeyboardButton = KeyboardButton('–ö–æ—Ç–∏–∫–æ–≤ üêà')

keyboard.add(button_1, button_2)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –≠—Ö–æ-–±–æ—Ç!\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/help"
@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.answer('–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏ –≤ –æ—Ç–≤–µ—Ç —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')


@dp.message_handler(commands=['cat'])
async def process_help_command(message: types.Message):
    API_PHOTO_URL: str = 'https://aws.random.cat/meow'
    NAME: str = "–∫–æ—Ç–∏–∫"
    response: requests.Response = requests.get(API_PHOTO_URL)
    if response.status_code == 200:
        photo_link: str = response.json()['file']
        await message.answer_photo(photo=photo_link)
    else:
        await message.answer(f'–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã—Ç—å {NAME}')


@dp.message_handler(commands=['dog'])
async def process_help_command(message: types.Message):
    API_PHOTO_URL: str = 'https://random.dog/woof.json'
    NAME: str = "–°–æ–±–∞—á–∫–∞"
    response: requests.Response = requests.get(API_PHOTO_URL)
    if response.status_code == 200:
        print('—á—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å')
        video_link: str = response.json()['url']
        await message.answer_video(video=video_link)
    else:
        await message.answer(f'–¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã—Ç—å {NAME}')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ç–æ
@dp.message_handler(content_types=['photo'])
async def send_photo_echo(message: types.Message):
    await message.answer_photo(message.photo[0].file_id)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Ç–∏–∫–µ—Ä–æ–≤
@dp.message_handler(content_types=['sticker'])
async def send_sticker_echo(message: types.Message):
    await message.answer_sticker(message.sticker.file_id)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥ "/start" –∏ "/help"
# @dp.message_handler()
# async def process_help_command(message: types.Message):
#     print('–ö—Ç–æ-—Ç–æ —Ö–æ—á–µ—Ç –Æ—Ç—É–±—á–µ–∫')
#     file_path: str = ''
#     if message.text.find('youtube.com'):
#         video_link = message.text
#         yt = pytube.YouTube(video_link)
#         i_tag = 22
#         print('–ü—Ä–µ–¥–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞')
#         stream = yt.streams.get_by_itag(i_tag)
#         print('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ')
#         file_path = stream.download()
#         print('–û—Ç–ø—Ä–∞–≤–∫–∞')
#         await bot.send_video(message.chat.id, open(file_path[41:], 'rb'))
#     await message.reply(message.text)


@dp.message_handler()
async def send_echo(message: types.Message):
    await message.reply(message.text)


if __name__ == '__main__':
    print('–ü–æ–µ—Ö–∞–ª–∏')
    executor.start_polling(dp, skip_updates=True)
